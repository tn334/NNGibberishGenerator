# -*- coding: utf-8 -*-
"""DataNormalization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Ycvtn2G47ITbFR3AtwIWE7WHj-zT0JL
"""

def word_to_numerical(word):
    numerical_list = []
    for letter in word:
        numerical_row = [0] * 26
        if letter.isalpha():
            idx = ord(letter.lower()) - ord('a')
            numerical_row[idx] = 1
        numerical_list.append(numerical_row)
    # hand words shorter than maximum size
    while len(numerical_list) < 5:
        numerical_list.append([0]*26)
    return numerical_list

def words_to_numerical_list(file_path):
    numerical_output = []
    with open(file_path, 'r') as file:
        for line in file:
            word = line.strip()
            numerical_word = word_to_numerical(word)
            for row in numerical_word:
                numerical_output.append(row)
    return numerical_output

def write_numerical_output(file_path, binary_output):
    counter = 0
    with open(file_path, 'w') as file:
        for i, row in enumerate(numerical_output):
            file.write(''.join(map(str, row)))
            counter += 1
            if counter % 5 == 0:
                file.write('\n')
            else:
                file.write(',')

if __name__ == "__main__":
    input_file = "/content/sample_data/5_letter_dict.txt"  # Replace with your input file name
    output_file = "/content/sample_data/numerical_dict.txt"  # Replace with your output file name

    numerical_output = words_to_numerical_list(input_file)
    write_numerical_output(output_file, numerical_output)